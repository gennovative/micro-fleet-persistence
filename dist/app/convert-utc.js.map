{"version":3,"sources":["app/convert-utc.ts"],"names":[],"mappings":";;AAAA,2BAA2B;AAC3B,iCAAiC;AAEjC,2BAA2B;AAC3B,MAAM,eAAe,GAAG,IAAI,EAAE,6BAA6B;AAC1D,aAAa,GAAG,IAAI,EAAE,0BAA0B;AAChD,QAAQ,GAAG,IAAI,CAAC;AAEjB;;;GAGG;AACH,IAAI,OAAO,GAAG,UAAS,GAAG;IACzB,MAAM,CAAC,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;AACnD,CAAC,CAAC;AAEF,UAAK,CAAC,aAAa,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;AAC9C,UAAK,CAAC,aAAa,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;AAC5C,UAAK,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC","file":"convert-utc.js","sourcesContent":["import { types } from 'pg';\r\nimport * as moment from 'moment';\r\n\r\n// PostgreSQL data type OID\r\nconst TIMESTAMPTZ_OID = 1184, // Timestamp without timezone\r\n\tTIMESTAMP_OID = 1114, // Timestamp with timezone\r\n\tDATE_OID = 1082;\r\n\r\n/**\r\n * This piece of code makes sure all date values loaded from database are converted\r\n * as UTC format.\r\n */\r\nlet parseFn = function(val) {\r\n\treturn val === null ? null : moment(val).toDate();\r\n};\r\n\r\ntypes.setTypeParser(TIMESTAMPTZ_OID, parseFn);\r\ntypes.setTypeParser(TIMESTAMP_OID, parseFn);\r\ntypes.setTypeParser(DATE_OID, parseFn);"]}